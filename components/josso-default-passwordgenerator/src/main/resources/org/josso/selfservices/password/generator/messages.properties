#
# JOSSO: Java Open Single Sign-On
#
# Copyright 2004-2009, Atricore, Inc.
#
# This is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this software; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA, or see the FSF site: http://www.fsf.org.
#
#

PwGenerator.Log4jConfig=PwGeneratorLogger.properties
PwGenerator.debug_UPPERCASE_ON=Turning on UPERCASE flag.
PwGenerator.debug_DIGITS_ON=Turning on DIGITS flag.
PwGenerator.WARN_PL_UPERCASE_OFF=Password length too short - switching off uppercase flag if any\!
PwGenerator.WARN_PL_SYMBOLS_OFF=Password length too short - switching off symbols flag if any\!
PwGenerator.WARN_PL_DIGITS_OFF=Password length too short - switching off symbols flag if any\!
PwGenerator.debug_ATTEMPT=Attempt\:
PwGenerator.debug_ATTEMPT_GENERATE=\ to generate password with flags\:
PwGenerator.PASSWORD_GENERATOR=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=   PasswordGenerator   \=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=\=
PwGenerator.SEPARATOR=----------------------------------------------------------------------------
PwGenerator.SERVICES_PROVIDERS_FOR=ServiceProviders for\: 
PwGenerator.NEW_LINE=\n
PwGenerator.SERVICE_PROVIDERS=\tServiceProvider\: 
PwGenerator.ALL_SEC_PROVIDERS=All Security Providers\: 
PwGenerator.PROVIDER=Provider\: 
PwGenerator.SERVICES=Services\: 
PwGenerator.NUM_PASSWORDS=Number of passwords set to\: 
PwGenerator.PASSWORD_LENGTH=Password length set to\: 
PwGenerator.COLUMNS_ENABLED=Print in columns enabled.
PwGenerator.TERMINAL_LENGTH=Terminal length set to\: 
PwGenerator.NORMAL_RANDOM=Using time seeded random.
PwGenerator.SEC_ALG=SecurityRandom -> Alg.:
PwGenerator.PROV=, Provider\: 
PwGenerator.DOR=.
PwGenerator.ERROR=Error\: 
PwGenerator.DEFAUL_RANDOM=The default radnom generator will be used.
PwGenerator.DIGITS_ON=Turning on DIGITS flag.
PwGenerator.DIGITS_OFF=Turning off DIGITS flag.
PwGenerator.UPPERCASE_ON=Turning on UPPERCASE flag.
PwGenerator.UPPERCASE_OFF=Turning off UPPERCASE flag.
PwGenerator.AMBIGOUS_ON=Turning on AMBIGOUS flag.
PwGenerator.AMBIGOUS_OFF=Turning off AMBIGOUS flag.
PwGenerator.SYMBOLS_ON=Turning on SYMBOLS flag.
PwGenerator.SYMBOLS_OFF=Turning off SYMBOLS flag.
PwGenerator.MAX_ATTEMPTS=Maximum number of attempts set to\: 
PwGenerator.GENRIC_FLAGS=----------------------------  Generic Flags   -----------------------------
PwGenerator.DIGITS=DIGITS\: \t
PwGenerator.AMBIGOUS=AMBIGUOUS\: \t
PwGenerator.SYMBOLS=SYMBOLS\: \t
PwGenerator.UPPERS=UPPERS\: \t
PwGenerator.GENERATING=Generating 
PwGenerator.PW_LENGTH=\ passwords with length\: 
PwGenerator.PW==============================   Passwords   ================================
PwGenerator.PARAM_ERROR=Parameter error\: 
PwGenerator.NUM_FORM_ERROR=Number format error\: 
PwGenerator.N_SEPARATOR=\n----------------------------------------------------------------------------
PwGenerator.USAGE=Usage\: java -jar jpwgen.jar [ OPTIONS ]\n
PwGenerator.EXAMPLE=Example: java -jar jpwgen.jar -N 60 -s 10 -C -Y -S SHA1PRNG SUN
DefaultBlacklistFilter.CHECK_PASSWD=Checking password : "
DefaultRegExFilter.debug_ENDS_SYMBOL=" ends with a symbol. Skipping\!
DefaultRegExFilter.debug_NO_SYMBOL=" does not contain any symbols. Skipping\!
DefaultRegExFilter.debug_NO_SYMBOLS=" does not contain two symbols. Skipping\!
DefaultRegExFilter.debug_NO_DIGITS=" does not contain two digits. Skipping\!
DefaultBlacklistFilter.BLACKLIST_ENTRY=" against blacklist entry: "
DefaultRegExFilter.debug_STARTS_SYMBOL=" starts with a symbol. Skipping\!
DefaultRegExFilter.debug_STARTS_DIGIT=" starts with a digit. Skipping\!
DefaultRegExFilter.debug_STARTS_UPERCASE=" starts with a uppercase. Skipping\!
DefaultRegExFilter.debug_STARTS_SMALL=" starts with a small letter. Skipping\!
DefaultRegExFilter.debug_NO_UPPERCASE=" does not contain any uppercase letters. Skipping\!\n
DefaultBlacklistFilter.DESCR=DefaultBlacklistFilter - checks passwords against a blacklist.
DefaultRegExFilter.ENDS_SMALL=" ends with a small letter. Skipping\!
DefaultRegExFilter.ENDS_UPPER=" ends with a uppercase letter. Skipping\!
DefaultRegExFilter.ENDS_DIGIT=" ends with a digit. Skipping\!
DefaultRegExFilter.DESC=Checks against predefined of combinations that can be set from command line.
DefaultRegExFilter.ID_CHANGE=Changing the ID of this filter makes no sense\!
DefaultBlacklistFilter.ID_CHANGE=Changing the ID of this filter makes no sense\!
DefaultRegExFilter.debug_PASSWD=Password "
DefaultRegExFilter.debug_NO_DIGIT=" does not contain any digits. Skipping\!
DefaultRegExFilter.debug_MORE_DIGITS=" has more than 1 digit. Skipping\!
DefaultRegExFilter.debug_MORE_SYMBOLS=" has more than 1 symbols. Skipping\!
DefaultRegExFilter.debug_MORE_UPPERCASE=" has more than 1 uppercase letter. Skipping\!
RandomFactory.TEST_LAG=Test algorithms:
RandomFactory.ALG=Algorithm\: 
RandomFactory.TEST_PROV=Test providers:
RandomFactory.PROV=Provider\: 
RandomFactory.SERV=Services\: 
RandomFactory.TEST_SERV=Test servicesFor:
RandomFactory.POSSIBLE=Possible for 
RandomFactory.7=\: 
RandomFactory.TEST=Test getServiceProviders:
RandomFactory.GET_SRV_PRV=getServiceProviders\: 
RandomFactory.TEST_GET_RANDOM=Test getRandom:
RandomFactory.GET_RANDOM=getRandom:
RandomFactory.TEST_SEED=Test getRandom(seed):
RandomFactory.TEST_GET_RANDOM_SEED=getRandom(seed):
RandomFactory.TEST_GET_SECURE_RANDOM=Test getSecureRandom():
RandomFactory.GET_SECURE_RANDOM=getSecureRandom():
RandomFactory.TEST_GET_SECURE_RANDOM_ALG=Test getSecureRandom(alg):
RandomFactory.GET_SECURE_RANDOM_ALG=getSecureRandom(alg):
RandomFactory.TEST_GET_SECURE_RANDOM_ALG_PROV=Test getSecureRandom(alg, prov):
RandomFactory.GET_SECURE_RANDOM_ALG_PROV=getSecureRandom(alg,prov):
IPwGenCommandLineOptions.CL_NUMBER_PASSWORD_DESC=The number of passwords to be generated
IPwGenCommandLineOptions.CL_PASSWORD_LENGTH_DESC=The length of the generated password
IPwGenCommandLineOptions.CL_CAPITALIZE_DESC=Include at least one capital letter in the password
IPwGenCommandLineOptions.CL_NO_CAPITALIZE_DESC=Don't include capital letters in the password
IPwGenCommandLineOptions.CL_NUMERALS_DESC=Include at least one number in the password
IPwGenCommandLineOptions.CL_NO_NUMERALS_DESC=Don't include numbers in the password
IPwGenCommandLineOptions.CL_SYMBOLS_DESC=Include at least one special symbol in the password
IPwGenCommandLineOptions.CL_NO_SYMBOLS_DESC=Include no special symbols in the password
IPwGenCommandLineOptions.CL_AMBIGOUS_DESC=Don't include ambiguous characters in the password
IPwGenCommandLineOptions.CL_NO_AMBIGOUS_DESC=Allow ambiguous characters in the password
IPwGenCommandLineOptions.CL_HELP_DESC=Print a help message
IPwGenCommandLineOptions.CL_RANDOM_DESC=Use simple random for password generation
IPwGenCommandLineOptions.CL_COLUMN_DESC=Print the generated passwords in columns
IPwGenCommandLineOptions.CL_TERM_WIDTH_DESC=Sets the character width of the jpwgen terminal
IPwGenCommandLineOptions.CL_SR_PROVIDERS_DESC=Lists the available security service providers for SecureRandom and exits
IPwGenCommandLineOptions.CL_PROVIDERS_DESC=Lists all available security providers and algorithms
IPwGenCommandLineOptions.CL_SR_ALGORITHM_DESC=Sets the random algorithm used by SecureRandom
IPwGenCommandLineOptions.CL_MAX_ATTEMPTS_DESC=Sets the maximum number of attempts for generating a password with the provided policies
IPwGenCommandLineOptions.CL_REGEX_STARTS_NO_SMALL_LETTER_DESC=Generates password starting with a character different than a small letter
IPwGenCommandLineOptions.CL_REGEX_ENDS_NO_SMALL_LETTER_DESC=Generates password ending with a character different than a small letter
IPwGenCommandLineOptions.CL_REGEX_STARTS_NO_UPPER_LETTER_DESC=Generates password starting with a character different than a uppercase letter
IPwGenCommandLineOptions.CL_REGEX_ENDS_NO_UPPER_LETTER_DESC=Generates password ending with a character different than a uppercase letter
IPwGenCommandLineOptions.CL_REGEX_ENDS_NO_DIGIT_DESC=Generates password ending with a character different than a digit
IPwGenCommandLineOptions.CL_REGEX_STARTS_NO_DIGIT_DESC=Generates password starting with a character different than a digit
IPwGenCommandLineOptions.CL_REGEX_STARTS_NO_SYMBOL_DESC=Generates password starting with a character different than a symbol
IPwGenCommandLineOptions.CL_REGEX_ENDS_NO_SYMBOL_DESC=Generates password ending with a character different than a symbol
IPwGenCommandLineOptions.CL_REGEX_ONLY_1_CAPITAL_DESC=Generates password containing exactly one uppercase letter
IPwGenCommandLineOptions.CL_REGEX_ONLY_1_SYMBOL_DESC=Generates password containing exactly one symbol
IPwGenCommandLineOptions.CL_REGEX_AT_LEAST_2_SYMBOLS_DESC=Generates password containing at least two symbols
IPwGenCommandLineOptions.CL_REGEX_ONLY_1_DIGIT_DESC=Generates password containing exactly one digit
IPwGenCommandLineOptions.CL_REGEX_AT_LEAST_2_DIGITS_DESC=Generates password containing at least two digits