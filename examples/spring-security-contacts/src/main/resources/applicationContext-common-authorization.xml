<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ JOSSO: Java Open Single Sign-On
  ~
  ~ Copyright 2004-2009, Atricore, Inc.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  ~
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.1.xsd">

    <!--
  - Application context containing authentication beans.
  -
  - Used by all artifacts.
  -
  - $Id: applicationContext-common-authorization.xml 974 2009-01-14 00:39:45Z sgonzalez $
  -->

    <!-- ~~~~~~~~~~~~~~~~~~ "BEFORE INVOCATION" AUTHORIZATION DEFINITIONS ~~~~~~~~~~~~~~~~ -->

    <!-- ACL permission masks used by this application -->
    <bean id="org.springframework.security.acls.domain.BasePermission.ADMINISTRATION"
          class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
        <property name="staticField" value="org.springframework.security.acls.domain.BasePermission.ADMINISTRATION"/>
    </bean>
    <bean id="org.springframework.security.acls.domain.BasePermission.READ"
          class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
        <property name="staticField" value="org.springframework.security.acls.domain.BasePermission.READ"/>
    </bean>
    <bean id="org.springframework.security.acls.domain.BasePermission.DELETE"
          class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
        <property name="staticField" value="org.springframework.security.acls.domain.BasePermission.DELETE"/>
    </bean>

    <!-- An access decision voter that reads ROLE_* configuration settings -->
    <bean id="roleVoter" class="org.springframework.security.vote.RoleVoter"/>

    <!-- An access decision voter that reads ACL_CONTACT_READ configuration settings -->
    <bean id="aclContactReadVoter" class="org.springframework.security.vote.AclEntryVoter">
        <constructor-arg ref="aclService"/>
        <constructor-arg value="ACL_CONTACT_READ"/>
        <constructor-arg>
            <list>
                <ref local="org.springframework.security.acls.domain.BasePermission.ADMINISTRATION"/>
                <ref local="org.springframework.security.acls.domain.BasePermission.READ"/>
            </list>
        </constructor-arg>
        <property name="processDomainObjectClass" value="sample.contact.Contact"/>
    </bean>

    <!-- An access decision voter that reads ACL_CONTACT_DELETE configuration settings -->
    <bean id="aclContactDeleteVoter" class="org.springframework.security.vote.AclEntryVoter">
        <constructor-arg ref="aclService"/>
        <constructor-arg value="ACL_CONTACT_DELETE"/>
        <constructor-arg>
            <list>
                <ref local="org.springframework.security.acls.domain.BasePermission.ADMINISTRATION"/>
                <ref local="org.springframework.security.acls.domain.BasePermission.DELETE"/>
            </list>
        </constructor-arg>
        <property name="processDomainObjectClass" value="sample.contact.Contact"/>
    </bean>

    <!-- An access decision voter that reads ACL_CONTACT_ADMIN configuration settings -->
    <bean id="aclContactAdminVoter" class="org.springframework.security.vote.AclEntryVoter">
        <constructor-arg ref="aclService"/>
        <constructor-arg value="ACL_CONTACT_ADMIN"/>
        <constructor-arg>
            <list>
                <ref local="org.springframework.security.acls.domain.BasePermission.ADMINISTRATION"/>
            </list>
        </constructor-arg>
        <property name="processDomainObjectClass" value="sample.contact.Contact"/>
    </bean>

    <!-- An access decision manager used by the business objects -->
    <bean id="businessAccessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
        <property name="allowIfAllAbstainDecisions" value="false"/>
        <property name="decisionVoters">
            <list>
                <ref local="roleVoter"/>
                <ref local="aclContactReadVoter"/>
                <ref local="aclContactDeleteVoter"/>
                <ref local="aclContactAdminVoter"/>
            </list>
        </property>
    </bean>

    <!-- ========= ACCESS CONTROL LIST LOOKUP MANAGER DEFINITIONS ========= -->

    <bean id="aclCache" class="org.springframework.security.acls.jdbc.EhCacheBasedAclCache">
        <constructor-arg>
            <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
                <property name="cacheManager">
                    <bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
                </property>
                <property name="cacheName" value="aclCache"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="lookupStrategy" class="org.springframework.security.acls.jdbc.BasicLookupStrategy">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="aclCache"/>
        <constructor-arg>
            <bean class="org.springframework.security.acls.domain.AclAuthorizationStrategyImpl">
                <constructor-arg>
                    <list>
                        <bean class="org.springframework.security.GrantedAuthorityImpl">
                            <constructor-arg value="ROLE_ADMINISTRATOR"/>
                        </bean>
                        <bean class="org.springframework.security.GrantedAuthorityImpl">
                            <constructor-arg value="ROLE_ADMINISTRATOR"/>
                        </bean>
                        <bean class="org.springframework.security.GrantedAuthorityImpl">
                            <constructor-arg value="ROLE_ADMINISTRATOR"/>
                        </bean>
                    </list>
                </constructor-arg>
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="org.springframework.security.acls.domain.ConsoleAuditLogger"/>
        </constructor-arg>
    </bean>

    <bean id="aclService" class="org.springframework.security.acls.jdbc.JdbcMutableAclService">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="lookupStrategy"/>
        <constructor-arg ref="aclCache"/>
    </bean>

    <!-- ============== "AFTER INTERCEPTION" AUTHORIZATION DEFINITIONS =========== -->

    <bean id="afterInvocationManager"
          class="org.springframework.security.afterinvocation.AfterInvocationProviderManager">
        <property name="providers">
            <list>
                <ref local="afterAclRead"/>
                <ref local="afterAclCollectionRead"/>
            </list>
        </property>
    </bean>

    <!-- Processes AFTER_ACL_COLLECTION_READ configuration settings -->
    <bean id="afterAclCollectionRead"
          class="org.springframework.security.afterinvocation.AclEntryAfterInvocationCollectionFilteringProvider">
        <constructor-arg ref="aclService"/>
        <constructor-arg>
            <list>
                <ref local="org.springframework.security.acls.domain.BasePermission.ADMINISTRATION"/>
                <ref local="org.springframework.security.acls.domain.BasePermission.READ"/>
            </list>
        </constructor-arg>
    </bean>

    <!-- Processes AFTER_ACL_READ configuration settings -->
    <bean id="afterAclRead" class="org.springframework.security.afterinvocation.AclEntryAfterInvocationProvider">
        <constructor-arg ref="aclService"/>
        <constructor-arg>
            <list>
                <ref local="org.springframework.security.acls.domain.BasePermission.ADMINISTRATION"/>
                <ref local="org.springframework.security.acls.domain.BasePermission.READ"/>
            </list>
        </constructor-arg>
    </bean>

</beans>
