/* josso-1.2.h
   Generated by wsdl2h 1.2.14 from josso-1.2.wsdl and typemap.dat
   2009-09-22 18:30:14 GMT
   gSOAP XML Web services tools.
   Copyright (C) 2001-2009 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * urn:org:josso:gateway:ws:1.2:wsdl                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to disable)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "urn:org:josso:gateway:ws:1.2:wsdl"
ns2 = ""
ns3 = "urn:org:josso:gateway:ws:1.2:protocol"

*/

//gsoap ns2   schema namespace:	
//gsoap ns3   schema namespace:	urn:org:josso:gateway:ws:1.2:protocol
//gsoap ns2   schema elementForm:	qualified
//gsoap ns2   schema attributeForm:	unqualified
//gsoap ns3   schema elementForm:	qualified
//gsoap ns3   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class ns3__ResolveAuthenticationAssertionRequestType.
class ns3__ResolveAuthenticationAssertionRequestType;

//  Forward declaration of class ns3__ResolveAuthenticationAssertionResponseType.
class ns3__ResolveAuthenticationAssertionResponseType;

//  Forward declaration of class ns3__AssertIdentityWithSimpleAuthenticationRequestType.
class ns3__AssertIdentityWithSimpleAuthenticationRequestType;

//  Forward declaration of class ns3__AssertIdentityWithSimpleAuthenticationResponseType.
class ns3__AssertIdentityWithSimpleAuthenticationResponseType;

//  Forward declaration of class ns3__GlobalSignoffRequestType.
class ns3__GlobalSignoffRequestType;

//  Forward declaration of class ns3__GlobalSignoffResponseType.
class ns3__GlobalSignoffResponseType;

//  Forward declaration of class ns3__SSOIdentityProviderErrorType.
class ns3__SSOIdentityProviderErrorType;

//  Forward declaration of class ns3__AssertionNotValidErrorType.
class ns3__AssertionNotValidErrorType;

//  Forward declaration of class ns3__FindUserInSessionRequestType.
class ns3__FindUserInSessionRequestType;

//  Forward declaration of class ns3__FindUserInSessionResponseType.
class ns3__FindUserInSessionResponseType;

//  Forward declaration of class ns3__FindUserInSecurityDomainRequestType.
class ns3__FindUserInSecurityDomainRequestType;

//  Forward declaration of class ns3__FindUserInSecurityDomainResponseType.
class ns3__FindUserInSecurityDomainResponseType;

//  Forward declaration of class ns3__FindRolesBySSOSessionIdRequestType.
class ns3__FindRolesBySSOSessionIdRequestType;

//  Forward declaration of class ns3__FindRolesBySSOSessionIdResponseType.
class ns3__FindRolesBySSOSessionIdResponseType;

//  Forward declaration of class ns3__UserExistsRequestType.
class ns3__UserExistsRequestType;

//  Forward declaration of class ns3__UserExistsResponseType.
class ns3__UserExistsResponseType;

//  Forward declaration of class ns3__SSOIdentityManagerErrorType.
class ns3__SSOIdentityManagerErrorType;

//  Forward declaration of class ns3__NoSuchUserErrorType.
class ns3__NoSuchUserErrorType;

//  Forward declaration of class ns3__InvalidSessionErrorType.
class ns3__InvalidSessionErrorType;

//  Forward declaration of class ns3__AccessSessionRequestType.
class ns3__AccessSessionRequestType;

//  Forward declaration of class ns3__AccessSessionResponseType.
class ns3__AccessSessionResponseType;

//  Forward declaration of class ns3__SessionRequestType.
class ns3__SessionRequestType;

//  Forward declaration of class ns3__SessionResponseType.
class ns3__SessionResponseType;

//  Forward declaration of class ns3__SSOSessionErrorType.
class ns3__SSOSessionErrorType;

//  Forward declaration of class ns3__NoSuchSessionErrorType.
class ns3__NoSuchSessionErrorType;

//  Forward declaration of class ns3__SSOSessionType.
class ns3__SSOSessionType;

//  Forward declaration of class ns3__SSOUserType.
class ns3__SSOUserType;

//  Forward declaration of class ns3__SSORoleType.
class ns3__SSORoleType;

//  Forward declaration of class ns3__SSONameValuePairType.
class ns3__SSONameValuePairType;

/// "urn:org:josso:gateway:ws:1.2:protocol":ResolveAuthenticationAssertionRequestType is a complexType.
class ns3__ResolveAuthenticationAssertionRequestType
{ public:
/// Element requester of type xs:string.
    std::string                          requester                      1;	///< Required element.
/// Element assertionId of type xs:string.
    std::string                          assertionId                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":ResolveAuthenticationAssertionResponseType is a complexType.
class ns3__ResolveAuthenticationAssertionResponseType
{ public:
/// Element ssoSessionId of type xs:string.
    std::string                          ssoSessionId                   1;	///< Required element.
/// Element securityDomain of type xs:string.
    std::string                          securityDomain                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":AssertIdentityWithSimpleAuthenticationRequestType is a complexType.
class ns3__AssertIdentityWithSimpleAuthenticationRequestType
{ public:
/// Element requester of type xs:string.
    std::string                          requester                      1;	///< Required element.
/// Element securityDomain of type xs:string.
    std::string                          securityDomain                 1;	///< Required element.
/// Element username of type xs:string.
    std::string                          username                       1;	///< Required element.
/// Element password of type xs:string.
    std::string                          password                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":AssertIdentityWithSimpleAuthenticationResponseType is a complexType.
class ns3__AssertIdentityWithSimpleAuthenticationResponseType
{ public:
/// Element assertionId of type xs:string.
    std::string                          assertionId                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":GlobalSignoffRequestType is a complexType.
class ns3__GlobalSignoffRequestType
{ public:
/// Element requester of type xs:string.
    std::string                          requester                      1;	///< Required element.
/// Element ssoSessionId of type xs:string.
    std::string                          ssoSessionId                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":GlobalSignoffResponseType is a complexType.
class ns3__GlobalSignoffResponseType
{ public:
/// Element ssoSessionId of type xs:string.
    std::string                          ssoSessionId                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityProviderErrorType is a complexType.
class ns3__SSOIdentityProviderErrorType
{ public:
/// Element errMessage of type xs:string.
    std::string                          errMessage                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":AssertionNotValidErrorType is a complexType.
class ns3__AssertionNotValidErrorType
{ public:
/// Element assertionId of type xs:string.
    std::string                          assertionId                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSessionRequestType is a complexType.
class ns3__FindUserInSessionRequestType
{ public:
/// Element requester of type xs:string.
    std::string                          requester                      1;	///< Required element.
/// Element ssoSessionId of type xs:string.
    std::string                          ssoSessionId                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSessionResponseType is a complexType.
class ns3__FindUserInSessionResponseType
{ public:
/// Element reference "urn:org:josso:gateway:ws:1.2:protocol":SSOUser.
    ns3__SSOUserType*                    ns3__SSOUser                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSecurityDomainRequestType is a complexType.
class ns3__FindUserInSecurityDomainRequestType
{ public:
/// Element requester of type xs:string.
    std::string                          requester                      1;	///< Required element.
/// Element securityDomain of type xs:string.
    std::string                          securityDomain                 1;	///< Required element.
/// Element username of type xs:string.
    std::string                          username                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSecurityDomainResponseType is a complexType.
class ns3__FindUserInSecurityDomainResponseType
{ public:
/// Element reference "urn:org:josso:gateway:ws:1.2:protocol":SSOUser.
    ns3__SSOUserType*                    ns3__SSOUser                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":FindRolesBySSOSessionIdRequestType is a complexType.
class ns3__FindRolesBySSOSessionIdRequestType
{ public:
/// Element requester of type xs:string.
    std::string                          requester                      1;	///< Required element.
/// Element ssoSessionId of type xs:string.
    std::string                          ssoSessionId                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":FindRolesBySSOSessionIdResponseType is a complexType.
class ns3__FindRolesBySSOSessionIdResponseType
{ public:
/// Element username of type xs:string.
    std::string*                         username                      ;	///< Nullable pointer.
/// Vector of ns3__SSORoleType* with length 0..unbounded
    std::vector<ns3__SSORoleType*      > roles                          0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":UserExistsRequestType is a complexType.
class ns3__UserExistsRequestType
{ public:
/// Element requester of type xs:string.
    std::string                          requester                      1;	///< Required element.
/// Element securityDomain of type xs:string.
    std::string                          securityDomain                 1;	///< Required element.
/// Element username of type xs:string.
    std::string                          username                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":UserExistsResponseType is a complexType.
class ns3__UserExistsResponseType
{ public:
/// Element userexists of type xs:boolean.
    bool                                 userexists                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityManagerErrorType is a complexType.
class ns3__SSOIdentityManagerErrorType
{ public:
/// Element errMessage of type xs:string.
    std::string                          errMessage                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":NoSuchUserErrorType is a complexType.
class ns3__NoSuchUserErrorType
{ public:
/// Element securityDomain of type xs:string.
    std::string                          securityDomain                 1;	///< Required element.
/// Element username of type xs:string.
    std::string                          username                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":InvalidSessionErrorType is a complexType.
class ns3__InvalidSessionErrorType
{ public:
/// Element sessionId of type xs:string.
    std::string                          sessionId                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":AccessSessionRequestType is a complexType.
class ns3__AccessSessionRequestType
{ public:
/// Element requester of type xs:string.
    std::string                          requester                      1;	///< Required element.
/// Element ssoSessionId of type xs:string.
    std::string                          ssoSessionId                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":AccessSessionResponseType is a complexType.
class ns3__AccessSessionResponseType
{ public:
/// Element ssoSessionId of type xs:string.
    std::string                          ssoSessionId                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":SessionRequestType is a complexType.
class ns3__SessionRequestType
{ public:
/// Element requester of type xs:string.
    std::string                          requester                      1;	///< Required element.
/// Element sessionId of type xs:string.
    std::string                          sessionId                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":SessionResponseType is a complexType.
class ns3__SessionResponseType
{ public:
/// Element reference "urn:org:josso:gateway:ws:1.2:protocol":SSOSession.
    ns3__SSOSessionType*                 ns3__SSOSession                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":SSOSessionErrorType is a complexType.
class ns3__SSOSessionErrorType
{ public:
/// Element errMessage of type xs:string.
    std::string                          errMessage                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":NoSuchSessionErrorType is a complexType.
class ns3__NoSuchSessionErrorType
{ public:
/// Element sessionId of type xs:string.
    std::string                          sessionId                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":SSOSessionType is a complexType.
class ns3__SSOSessionType
{ public:
/// Element id of type xs:string.
    std::string                          id                             1;	///< Required element.
/// Element creationTime of type xs:long.
    LONG64                               creationTime                   1;	///< Required element.
/// Element lastAccessTime of type xs:long.
    LONG64                               lastAccessTime                 1;	///< Required element.
/// Element maxInactiveInterval of type xs:int.
    int                                  maxInactiveInterval            1;	///< Required element.
/// Element username of type xs:string.
    std::string                          username                       1;	///< Required element.
/// Element accessCount of type xs:long.
    LONG64                               accessCount                    1;	///< Required element.
/// Element valid of type xs:boolean.
    bool                                 valid                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":SSOUserType is a complexType.
class ns3__SSOUserType
{ public:
/// Vector of ns3__SSONameValuePairType* with length 0..unbounded
    std::vector<ns3__SSONameValuePairType*> properties                     0;
/// Element name of type xs:string.
    std::string                          name                           1;	///< Required element.
/// Element securitydomain of type xs:string.
    std::string                          securitydomain                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":SSORoleType is a complexType.
class ns3__SSORoleType
{ public:
/// Attribute name of type xs:string.
   @std::string                          name                           1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":SSONameValuePairType is a complexType.
class ns3__SSONameValuePairType
{ public:
/// Attribute name of type xs:string.
   @std::string                          name                           1;	///< Required attribute.
/// Attribute value of type xs:string.
   @std::string                          value                          1;	///< Required attribute.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// Element "urn:org:josso:gateway:ws:1.2:protocol":ResolveAuthenticationAssertionRequest of type "urn:org:josso:gateway:ws:1.2:protocol":ResolveAuthenticationAssertionRequestType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":ResolveAuthenticationAssertionResponse of type "urn:org:josso:gateway:ws:1.2:protocol":ResolveAuthenticationAssertionResponseType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":AssertIdentityWithSimpleAuthenticationRequest of type "urn:org:josso:gateway:ws:1.2:protocol":AssertIdentityWithSimpleAuthenticationRequestType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":AssertIdentityWithSimpleAuthenticationResponse of type "urn:org:josso:gateway:ws:1.2:protocol":AssertIdentityWithSimpleAuthenticationResponseType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":GlobalSignoffRequest of type "urn:org:josso:gateway:ws:1.2:protocol":GlobalSignoffRequestType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":GlobalSignoffResponse of type "urn:org:josso:gateway:ws:1.2:protocol":GlobalSignoffResponseType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityProviderError of type "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityProviderErrorType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":AssertionNotValidError of type "urn:org:josso:gateway:ws:1.2:protocol":AssertionNotValidErrorType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSessionRequest of type "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSessionRequestType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSessionResponse of type "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSessionResponseType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSecurityDomainRequest of type "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSecurityDomainRequestType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSecurityDomainResponse of type "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSecurityDomainResponseType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":FindRolesBySSOSessionIdRequest of type "urn:org:josso:gateway:ws:1.2:protocol":FindRolesBySSOSessionIdRequestType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":FindRolesBySSOSessionIdResponse of type "urn:org:josso:gateway:ws:1.2:protocol":FindRolesBySSOSessionIdResponseType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":UserExistsRequest of type "urn:org:josso:gateway:ws:1.2:protocol":UserExistsRequestType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":UserExistsResponse of type "urn:org:josso:gateway:ws:1.2:protocol":UserExistsResponseType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityManagerError of type "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityManagerErrorType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":NoSuchUserError of type "urn:org:josso:gateway:ws:1.2:protocol":NoSuchUserErrorType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":InvalidSessionError of type "urn:org:josso:gateway:ws:1.2:protocol":InvalidSessionErrorType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":AccessSessionRequest of type "urn:org:josso:gateway:ws:1.2:protocol":AccessSessionRequestType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":AccessSessionResponse of type "urn:org:josso:gateway:ws:1.2:protocol":AccessSessionResponseType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":SessionRequest of type "urn:org:josso:gateway:ws:1.2:protocol":SessionRequestType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":SessionResponse of type "urn:org:josso:gateway:ws:1.2:protocol":SessionResponseType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":SSOSessionError of type "urn:org:josso:gateway:ws:1.2:protocol":SSOSessionErrorType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":NoSuchSessionError of type "urn:org:josso:gateway:ws:1.2:protocol":NoSuchSessionErrorType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":SSOSession of type "urn:org:josso:gateway:ws:1.2:protocol":SSOSessionType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":SSOUser of type "urn:org:josso:gateway:ws:1.2:protocol":SSOUserType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":SSORole of type "urn:org:josso:gateway:ws:1.2:protocol":SSORoleType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:org:josso:gateway:ws:1.2:protocol":SSONameValuePair of type "urn:org:josso:gateway:ws:1.2:protocol":SSONameValuePairType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns4  service name:	SSOIdentityProviderSOAPBinding 
//gsoap ns4  service type:	SSOIdentityProvider 
//gsoap ns4  service port:	http://replace this ! 
//gsoap ns4  service namespace:	urn:org:josso:gateway:ws:1.2:wsdl/SSOIdentityProviderSOAPBinding 
//gsoap ns4  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns5  service name:	SSOIdentityManagerSOAPBinding 
//gsoap ns5  service type:	SSOIdentityManager 
//gsoap ns5  service port:	http://replace this ! 
//gsoap ns5  service namespace:	urn:org:josso:gateway:ws:1.2:wsdl/SSOIdentityManagerSOAPBinding 
//gsoap ns5  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns6  service name:	SSOSessionManagerSOAPBinding 
//gsoap ns6  service type:	SSOSessionManager 
//gsoap ns6  service port:	http://replace this ! 
//gsoap ns6  service namespace:	urn:org:josso:gateway:ws:1.2:wsdl/SSOSessionManagerSOAPBinding 
//gsoap ns6  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage josso Definitions

@section josso_bindings Bindings
  - @ref SSOIdentityProviderSOAPBinding
  - @ref SSOIdentityManagerSOAPBinding
  - @ref SSOSessionManagerSOAPBinding

*/

/**

@page SSOIdentityProviderSOAPBinding Binding "SSOIdentityProviderSOAPBinding"

@section SSOIdentityProviderSOAPBinding_operations Operations of Binding  "SSOIdentityProviderSOAPBinding"
  - @ref __ns4__resolveAuthenticationAssertion
  - @ref __ns4__assertIdentityWithSimpleAuthentication
  - @ref __ns4__globalSignoff

@section SSOIdentityProviderSOAPBinding_ports Endpoints of Binding  "SSOIdentityProviderSOAPBinding"
  - http://replace this !

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page SSOIdentityManagerSOAPBinding Binding "SSOIdentityManagerSOAPBinding"

@section SSOIdentityManagerSOAPBinding_operations Operations of Binding  "SSOIdentityManagerSOAPBinding"
  - @ref __ns5__findUserInSession
  - @ref __ns5__findUserInSecurityDomain
  - @ref __ns5__findRolesBySSOSessionId
  - @ref __ns5__userExists

@section SSOIdentityManagerSOAPBinding_ports Endpoints of Binding  "SSOIdentityManagerSOAPBinding"
  - http://replace this !

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page SSOSessionManagerSOAPBinding Binding "SSOSessionManagerSOAPBinding"

@section SSOSessionManagerSOAPBinding_operations Operations of Binding  "SSOSessionManagerSOAPBinding"
  - @ref __ns6__accessSession
  - @ref __ns6__getSession

@section SSOSessionManagerSOAPBinding_ports Endpoints of Binding  "SSOSessionManagerSOAPBinding"
  - http://replace this !

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * SOAP Fault Detail                                                          *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Fault is part of the gSOAP context and its content is accessed
through the soap.fault->detail variable (SOAP 1.1) or the
soap.fault->SOAP_ENV__Detail variable (SOAP 1.2).
Use option -j to omit.

*/
struct SOAP_ENV__Detail
{
// xsd:anyAttribute omitted: to parse attribute content of the Detail element into DOM anyAttribute, use wsdl2h option -d.
    ns3__AssertionNotValidErrorType*     ns3__AssertionNotValidError   ;
///< SOAP Fault element ""urn:org:josso:gateway:ws:1.2:protocol":AssertionNotValidError" part "AssertionNotValidError"
    ns3__SSOIdentityProviderErrorType*   ns3__SSOIdentityProviderError ;
///< SOAP Fault element ""urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityProviderError" part "SSOIdentityProviderError"
    ns3__InvalidSessionErrorType*        ns3__InvalidSessionError      ;
///< SOAP Fault element ""urn:org:josso:gateway:ws:1.2:protocol":InvalidSessionError" part "InvalidSessionError"
    ns3__NoSuchUserErrorType*            ns3__NoSuchUserError          ;
///< SOAP Fault element ""urn:org:josso:gateway:ws:1.2:protocol":NoSuchUserError" part "NoSuchUserError"
    ns3__SSOIdentityManagerErrorType*    ns3__SSOIdentityManagerError  ;
///< SOAP Fault element ""urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityManagerError" part "SSOIdentityManagerError"
    ns3__NoSuchSessionErrorType*         ns3__NoSuchSessionError       ;
///< SOAP Fault element ""urn:org:josso:gateway:ws:1.2:protocol":NoSuchSessionError" part "NoSuchSessionError"
    ns3__SSOSessionErrorType*            ns3__SSOSessionError          ;
///< SOAP Fault element ""urn:org:josso:gateway:ws:1.2:protocol":SSOSessionError" part "SSOSessionError"
    int                                  __type                        ;	///< set to SOAP_TYPE_X for a serializable type X
    void                                *fault                         ;	///< points to serializable object X or NULL
    _XML                                 __any                         ;	///< Catch any element content in XML string.
};

/******************************************************************************\
 *                                                                            *
 * SSOIdentityProviderSOAPBinding                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns4__resolveAuthenticationAssertion                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__resolveAuthenticationAssertion" of service binding "SSOIdentityProviderSOAPBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":AssertionNotValidError (literal)
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityProviderError (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__resolveAuthenticationAssertion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ns3__ResolveAuthenticationAssertionRequestType* ns3__ResolveAuthenticationAssertionRequest,
    // response parameters:
    ns3__ResolveAuthenticationAssertionResponseType* ns3__ResolveAuthenticationAssertionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__resolveAuthenticationAssertion(
    struct soap *soap,
    // request parameters:
    ns3__ResolveAuthenticationAssertionRequestType* ns3__ResolveAuthenticationAssertionRequest,
    // response parameters:
    ns3__ResolveAuthenticationAssertionResponseType* ns3__ResolveAuthenticationAssertionResponse
  );
@endcode

C++ proxy class (defined in soapSSOIdentityProviderSOAPBindingProxy.h):
  class SSOIdentityProviderSOAPBinding;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns4  service method-style:	resolveAuthenticationAssertion document
//gsoap ns4  service method-encoding:	resolveAuthenticationAssertion literal
//gsoap ns4  service method-fault:	resolveAuthenticationAssertion ns3__AssertionNotValidError
//gsoap ns4  service method-fault:	resolveAuthenticationAssertion ns3__SSOIdentityProviderError
int __ns4__resolveAuthenticationAssertion(
    ns3__ResolveAuthenticationAssertionRequestType* ns3__ResolveAuthenticationAssertionRequest,	///< Request parameter
    ns3__ResolveAuthenticationAssertionResponseType* ns3__ResolveAuthenticationAssertionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns4__assertIdentityWithSimpleAuthentication                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__assertIdentityWithSimpleAuthentication" of service binding "SSOIdentityProviderSOAPBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityProviderError (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__assertIdentityWithSimpleAuthentication(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ns3__AssertIdentityWithSimpleAuthenticationRequestType* ns3__AssertIdentityWithSimpleAuthenticationRequest,
    // response parameters:
    ns3__AssertIdentityWithSimpleAuthenticationResponseType* ns3__AssertIdentityWithSimpleAuthenticationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__assertIdentityWithSimpleAuthentication(
    struct soap *soap,
    // request parameters:
    ns3__AssertIdentityWithSimpleAuthenticationRequestType* ns3__AssertIdentityWithSimpleAuthenticationRequest,
    // response parameters:
    ns3__AssertIdentityWithSimpleAuthenticationResponseType* ns3__AssertIdentityWithSimpleAuthenticationResponse
  );
@endcode

C++ proxy class (defined in soapSSOIdentityProviderSOAPBindingProxy.h):
  class SSOIdentityProviderSOAPBinding;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns4  service method-style:	assertIdentityWithSimpleAuthentication document
//gsoap ns4  service method-encoding:	assertIdentityWithSimpleAuthentication literal
//gsoap ns4  service method-fault:	assertIdentityWithSimpleAuthentication ns3__SSOIdentityProviderError
int __ns4__assertIdentityWithSimpleAuthentication(
    ns3__AssertIdentityWithSimpleAuthenticationRequestType* ns3__AssertIdentityWithSimpleAuthenticationRequest,	///< Request parameter
    ns3__AssertIdentityWithSimpleAuthenticationResponseType* ns3__AssertIdentityWithSimpleAuthenticationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns4__globalSignoff                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__globalSignoff" of service binding "SSOIdentityProviderSOAPBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityProviderError (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__globalSignoff(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ns3__GlobalSignoffRequestType*      ns3__GlobalSignoffRequest,
    // response parameters:
    ns3__GlobalSignoffResponseType*     ns3__GlobalSignoffResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__globalSignoff(
    struct soap *soap,
    // request parameters:
    ns3__GlobalSignoffRequestType*      ns3__GlobalSignoffRequest,
    // response parameters:
    ns3__GlobalSignoffResponseType*     ns3__GlobalSignoffResponse
  );
@endcode

C++ proxy class (defined in soapSSOIdentityProviderSOAPBindingProxy.h):
  class SSOIdentityProviderSOAPBinding;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns4  service method-style:	globalSignoff document
//gsoap ns4  service method-encoding:	globalSignoff literal
//gsoap ns4  service method-fault:	globalSignoff ns3__SSOIdentityProviderError
int __ns4__globalSignoff(
    ns3__GlobalSignoffRequestType*      ns3__GlobalSignoffRequest,	///< Request parameter
    ns3__GlobalSignoffResponseType*     ns3__GlobalSignoffResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * SSOIdentityManagerSOAPBinding                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns5__findUserInSession                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__findUserInSession" of service binding "SSOIdentityManagerSOAPBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityManagerError (literal)
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":NoSuchUserError (literal)
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":InvalidSessionError (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__findUserInSession(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ns3__FindUserInSessionRequestType*  ns3__FindUserInSessionRequest,
    // response parameters:
    ns3__FindUserInSessionResponseType* ns3__FindUserInSessionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__findUserInSession(
    struct soap *soap,
    // request parameters:
    ns3__FindUserInSessionRequestType*  ns3__FindUserInSessionRequest,
    // response parameters:
    ns3__FindUserInSessionResponseType* ns3__FindUserInSessionResponse
  );
@endcode

C++ proxy class (defined in soapSSOIdentityManagerSOAPBindingProxy.h):
  class SSOIdentityManagerSOAPBinding;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns5  service method-style:	findUserInSession document
//gsoap ns5  service method-encoding:	findUserInSession literal
//gsoap ns5  service method-fault:	findUserInSession ns3__SSOIdentityManagerError
//gsoap ns5  service method-fault:	findUserInSession ns3__NoSuchUserError
//gsoap ns5  service method-fault:	findUserInSession ns3__InvalidSessionError
int __ns5__findUserInSession(
    ns3__FindUserInSessionRequestType*  ns3__FindUserInSessionRequest,	///< Request parameter
    ns3__FindUserInSessionResponseType* ns3__FindUserInSessionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns5__findUserInSecurityDomain                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__findUserInSecurityDomain" of service binding "SSOIdentityManagerSOAPBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityManagerError (literal)
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":NoSuchUserError (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__findUserInSecurityDomain(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ns3__FindUserInSecurityDomainRequestType* ns3__FindUserInSecurityDomainRequest,
    // response parameters:
    ns3__FindUserInSecurityDomainResponseType* ns3__FindUserInSecurityDomainResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__findUserInSecurityDomain(
    struct soap *soap,
    // request parameters:
    ns3__FindUserInSecurityDomainRequestType* ns3__FindUserInSecurityDomainRequest,
    // response parameters:
    ns3__FindUserInSecurityDomainResponseType* ns3__FindUserInSecurityDomainResponse
  );
@endcode

C++ proxy class (defined in soapSSOIdentityManagerSOAPBindingProxy.h):
  class SSOIdentityManagerSOAPBinding;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns5  service method-style:	findUserInSecurityDomain document
//gsoap ns5  service method-encoding:	findUserInSecurityDomain literal
//gsoap ns5  service method-fault:	findUserInSecurityDomain ns3__SSOIdentityManagerError
//gsoap ns5  service method-fault:	findUserInSecurityDomain ns3__NoSuchUserError
int __ns5__findUserInSecurityDomain(
    ns3__FindUserInSecurityDomainRequestType* ns3__FindUserInSecurityDomainRequest,	///< Request parameter
    ns3__FindUserInSecurityDomainResponseType* ns3__FindUserInSecurityDomainResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns5__findRolesBySSOSessionId                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__findRolesBySSOSessionId" of service binding "SSOIdentityManagerSOAPBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityManagerError (literal)
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":InvalidSessionError (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__findRolesBySSOSessionId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ns3__FindRolesBySSOSessionIdRequestType* ns3__FindRolesBySSOSessionIdRequest,
    // response parameters:
    ns3__FindRolesBySSOSessionIdResponseType* ns3__FindRolesBySSOSessionIdResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__findRolesBySSOSessionId(
    struct soap *soap,
    // request parameters:
    ns3__FindRolesBySSOSessionIdRequestType* ns3__FindRolesBySSOSessionIdRequest,
    // response parameters:
    ns3__FindRolesBySSOSessionIdResponseType* ns3__FindRolesBySSOSessionIdResponse
  );
@endcode

C++ proxy class (defined in soapSSOIdentityManagerSOAPBindingProxy.h):
  class SSOIdentityManagerSOAPBinding;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns5  service method-style:	findRolesBySSOSessionId document
//gsoap ns5  service method-encoding:	findRolesBySSOSessionId literal
//gsoap ns5  service method-fault:	findRolesBySSOSessionId ns3__SSOIdentityManagerError
//gsoap ns5  service method-fault:	findRolesBySSOSessionId ns3__InvalidSessionError
int __ns5__findRolesBySSOSessionId(
    ns3__FindRolesBySSOSessionIdRequestType* ns3__FindRolesBySSOSessionIdRequest,	///< Request parameter
    ns3__FindRolesBySSOSessionIdResponseType* ns3__FindRolesBySSOSessionIdResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns5__userExists                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__userExists" of service binding "SSOIdentityManagerSOAPBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityManagerError (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__userExists(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ns3__UserExistsRequestType*         ns3__UserExistsRequest,
    // response parameters:
    ns3__UserExistsResponseType*        ns3__UserExistsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__userExists(
    struct soap *soap,
    // request parameters:
    ns3__UserExistsRequestType*         ns3__UserExistsRequest,
    // response parameters:
    ns3__UserExistsResponseType*        ns3__UserExistsResponse
  );
@endcode

C++ proxy class (defined in soapSSOIdentityManagerSOAPBindingProxy.h):
  class SSOIdentityManagerSOAPBinding;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns5  service method-style:	userExists document
//gsoap ns5  service method-encoding:	userExists literal
//gsoap ns5  service method-fault:	userExists ns3__SSOIdentityManagerError
int __ns5__userExists(
    ns3__UserExistsRequestType*         ns3__UserExistsRequest,	///< Request parameter
    ns3__UserExistsResponseType*        ns3__UserExistsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * SSOSessionManagerSOAPBinding                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns6__accessSession                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__accessSession" of service binding "SSOSessionManagerSOAPBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":SSOSessionError (literal)
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":NoSuchSessionError (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__accessSession(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ns3__AccessSessionRequestType*      ns3__AccessSessionRequest,
    // response parameters:
    ns3__AccessSessionResponseType*     ns3__AccessSessionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__accessSession(
    struct soap *soap,
    // request parameters:
    ns3__AccessSessionRequestType*      ns3__AccessSessionRequest,
    // response parameters:
    ns3__AccessSessionResponseType*     ns3__AccessSessionResponse
  );
@endcode

C++ proxy class (defined in soapSSOSessionManagerSOAPBindingProxy.h):
  class SSOSessionManagerSOAPBinding;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns6  service method-style:	accessSession document
//gsoap ns6  service method-encoding:	accessSession literal
//gsoap ns6  service method-fault:	accessSession ns3__SSOSessionError
//gsoap ns6  service method-fault:	accessSession ns3__NoSuchSessionError
int __ns6__accessSession(
    ns3__AccessSessionRequestType*      ns3__AccessSessionRequest,	///< Request parameter
    ns3__AccessSessionResponseType*     ns3__AccessSessionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns6__getSession                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__getSession" of service binding "SSOSessionManagerSOAPBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":SSOSessionError (literal)
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":NoSuchSessionError (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__getSession(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ns3__SessionRequestType*            ns3__SessionRequest,
    // response parameters:
    ns3__SessionResponseType*           ns3__SessionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__getSession(
    struct soap *soap,
    // request parameters:
    ns3__SessionRequestType*            ns3__SessionRequest,
    // response parameters:
    ns3__SessionResponseType*           ns3__SessionResponse
  );
@endcode

C++ proxy class (defined in soapSSOSessionManagerSOAPBindingProxy.h):
  class SSOSessionManagerSOAPBinding;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns6  service method-style:	getSession document
//gsoap ns6  service method-encoding:	getSession literal
//gsoap ns6  service method-fault:	getSession ns3__SSOSessionError
//gsoap ns6  service method-fault:	getSession ns3__NoSuchSessionError
int __ns6__getSession(
    ns3__SessionRequestType*            ns3__SessionRequest,	///< Request parameter
    ns3__SessionResponseType*           ns3__SessionResponse	///< Response parameter
);

/* End of josso-1.2.h */
