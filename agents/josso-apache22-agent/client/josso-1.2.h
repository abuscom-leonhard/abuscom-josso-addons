/* josso-1.2.h
   Generated by wsdl2h 1.2.16 from josso-1.2.wsdl and typemap.dat
   2010-12-02 16:17:28 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2010 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Build Notes

NOTE:

 - Run soapcpp2 on josso-1.2.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   urn:org:josso:gateway:ws:1.2:wsdl                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "urn:org:josso:gateway:ws:1.2:wsdl"
ns2 = ""
ns3 = "urn:org:josso:gateway:ws:1.2:protocol"

*/

#define SOAP_NAMESPACE_OF_ns2	""
//gsoap ns2   schema namespace:	
//gsoap ns2   schema elementForm:	qualified
//gsoap ns2   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns3	"urn:org:josso:gateway:ws:1.2:protocol"
//gsoap ns3   schema namespace:	urn:org:josso:gateway:ws:1.2:protocol
//gsoap ns3   schema elementForm:	qualified
//gsoap ns3   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Built-in type "xs:boolean".
enum xsd__boolean { xsd__boolean__false_, xsd__boolean__true_ };


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   urn:org:josso:gateway:ws:1.2:protocol                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   urn:org:josso:gateway:ws:1.2:protocol                                    *
 *                                                                            *
\******************************************************************************/


/// "urn:org:josso:gateway:ws:1.2:protocol":ResolveAuthenticationAssertionRequestType is a complexType.
struct ns3__ResolveAuthenticationAssertionRequestType
{
/// Element requester of type xs:string.
    char*                                requester                      1;	///< Required element.
/// Element assertionId of type xs:string.
    char*                                assertionId                    1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":ResolveAuthenticationAssertionResponseType is a complexType.
struct ns3__ResolveAuthenticationAssertionResponseType
{
/// Element ssoSessionId of type xs:string.
    char*                                ssoSessionId                   1;	///< Required element.
/// Element securityDomain of type xs:string.
    char*                                securityDomain                 1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":AssertIdentityWithSimpleAuthenticationRequestType is a complexType.
struct ns3__AssertIdentityWithSimpleAuthenticationRequestType
{
/// Element requester of type xs:string.
    char*                                requester                      1;	///< Required element.
/// Element securityDomain of type xs:string.
    char*                                securityDomain                 1;	///< Required element.
/// Element username of type xs:string.
    char*                                username                       1;	///< Required element.
/// Element password of type xs:string.
    char*                                password                       1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":AssertIdentityWithSimpleAuthenticationResponseType is a complexType.
struct ns3__AssertIdentityWithSimpleAuthenticationResponseType
{
/// Element assertionId of type xs:string.
    char*                                assertionId                    1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":GlobalSignoffRequestType is a complexType.
struct ns3__GlobalSignoffRequestType
{
/// Element requester of type xs:string.
    char*                                requester                      1;	///< Required element.
/// Element ssoSessionId of type xs:string.
    char*                                ssoSessionId                   1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":GlobalSignoffResponseType is a complexType.
struct ns3__GlobalSignoffResponseType
{
/// Element ssoSessionId of type xs:string.
    char*                                ssoSessionId                   1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityProviderErrorType is a complexType.
struct ns3__SSOIdentityProviderErrorType
{
/// Element errMessage of type xs:string.
    char*                                errMessage                     1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":AssertionNotValidErrorType is a complexType.
struct ns3__AssertionNotValidErrorType
{
/// Element assertionId of type xs:string.
    char*                                assertionId                    1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSessionRequestType is a complexType.
struct ns3__FindUserInSessionRequestType
{
/// Element requester of type xs:string.
    char*                                requester                      1;	///< Required element.
/// Element ssoSessionId of type xs:string.
    char*                                ssoSessionId                   1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSessionResponseType is a complexType.
struct ns3__FindUserInSessionResponseType
{
/// Element reference "urn:org:josso:gateway:ws:1.2:protocol":SSOUser.
    struct ns3__SSOUserType*             SSOUser                        1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSecurityDomainRequestType is a complexType.
struct ns3__FindUserInSecurityDomainRequestType
{
/// Element requester of type xs:string.
    char*                                requester                      1;	///< Required element.
/// Element securityDomain of type xs:string.
    char*                                securityDomain                 1;	///< Required element.
/// Element username of type xs:string.
    char*                                username                       1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSecurityDomainResponseType is a complexType.
struct ns3__FindUserInSecurityDomainResponseType
{
/// Element reference "urn:org:josso:gateway:ws:1.2:protocol":SSOUser.
    struct ns3__SSOUserType*             SSOUser                        1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":FindRolesBySSOSessionIdRequestType is a complexType.
struct ns3__FindRolesBySSOSessionIdRequestType
{
/// Element requester of type xs:string.
    char*                                requester                      1;	///< Required element.
/// Element ssoSessionId of type xs:string.
    char*                                ssoSessionId                   1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":FindRolesBySSOSessionIdResponseType is a complexType.
struct ns3__FindRolesBySSOSessionIdResponseType
{
/// Element username of type xs:string.
    char*                                username                      ;	///< Nullable pointer.
/// Size of array of struct ns3__SSORoleType* is 0..unbounded
   $int                                  __sizeroles                    0;
/// Array struct ns3__SSORoleType* of length 0..unbounded
    struct ns3__SSORoleType*             roles                          0;
};

/// "urn:org:josso:gateway:ws:1.2:protocol":UserExistsRequestType is a complexType.
struct ns3__UserExistsRequestType
{
/// Element requester of type xs:string.
    char*                                requester                      1;	///< Required element.
/// Element securityDomain of type xs:string.
    char*                                securityDomain                 1;	///< Required element.
/// Element username of type xs:string.
    char*                                username                       1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":UserExistsResponseType is a complexType.
struct ns3__UserExistsResponseType
{
/// Element userexists of type xs:boolean.
    enum xsd__boolean                    userexists                     1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityManagerErrorType is a complexType.
struct ns3__SSOIdentityManagerErrorType
{
/// Element errMessage of type xs:string.
    char*                                errMessage                     1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":NoSuchUserErrorType is a complexType.
struct ns3__NoSuchUserErrorType
{
/// Element securityDomain of type xs:string.
    char*                                securityDomain                 1;	///< Required element.
/// Element username of type xs:string.
    char*                                username                       1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":InvalidSessionErrorType is a complexType.
struct ns3__InvalidSessionErrorType
{
/// Element sessionId of type xs:string.
    char*                                sessionId                      1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":AccessSessionRequestType is a complexType.
struct ns3__AccessSessionRequestType
{
/// Element requester of type xs:string.
    char*                                requester                      1;	///< Required element.
/// Element ssoSessionId of type xs:string.
    char*                                ssoSessionId                   1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":AccessSessionResponseType is a complexType.
struct ns3__AccessSessionResponseType
{
/// Element ssoSessionId of type xs:string.
    char*                                ssoSessionId                   1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":SessionRequestType is a complexType.
struct ns3__SessionRequestType
{
/// Element requester of type xs:string.
    char*                                requester                      1;	///< Required element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":SessionResponseType is a complexType.
struct ns3__SessionResponseType
{
/// Element reference "urn:org:josso:gateway:ws:1.2:protocol":SSOSession.
    struct ns3__SSOSessionType*          SSOSession                     1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":SSOSessionErrorType is a complexType.
struct ns3__SSOSessionErrorType
{
/// Element errMessage of type xs:string.
    char*                                errMessage                     1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":NoSuchSessionErrorType is a complexType.
struct ns3__NoSuchSessionErrorType
{
/// Element sessionId of type xs:string.
    char*                                sessionId                      1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":SSOSessionType is a complexType.
struct ns3__SSOSessionType
{
/// Element id of type xs:string.
    char*                                id                             1;	///< Required element.
/// Element creationTime of type xs:long.
    LONG64                               creationTime                   1;	///< Required element.
/// Element lastAccessTime of type xs:long.
    LONG64                               lastAccessTime                 1;	///< Required element.
/// Element maxInactiveInterval of type xs:int.
    int                                  maxInactiveInterval            1;	///< Required element.
/// Element username of type xs:string.
    char*                                username                       1;	///< Required element.
/// Element accessCount of type xs:long.
    LONG64                               accessCount                    1;	///< Required element.
/// Element valid of type xs:boolean.
    enum xsd__boolean                    valid                          1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":SSOUserType is a complexType.
struct ns3__SSOUserType
{
/// Size of array of struct ns3__SSONameValuePairType* is 0..unbounded
   $int                                  __sizeproperties               0;
/// Array struct ns3__SSONameValuePairType* of length 0..unbounded
    struct ns3__SSONameValuePairType*    properties                     0;
/// Element name of type xs:string.
    char*                                name                           1;	///< Required element.
/// Element securitydomain of type xs:string.
    char*                                securitydomain                 1;	///< Required element.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":SSORoleType is a complexType.
struct ns3__SSORoleType
{
/// Attribute name of type xs:string.
   @char*                                name                           1;	///< Required attribute.
};

/// "urn:org:josso:gateway:ws:1.2:protocol":SSONameValuePairType is a complexType.
struct ns3__SSONameValuePairType
{
/// Attribute name of type xs:string.
   @char*                                name                           1;	///< Required attribute.
/// Attribute value of type xs:string.
   @char*                                value                          1;	///< Required attribute.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   urn:org:josso:gateway:ws:1.2:protocol                                    *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":ResolveAuthenticationAssertionRequest of type "urn:org:josso:gateway:ws:1.2:protocol":ResolveAuthenticationAssertionRequestType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":ResolveAuthenticationAssertionResponse of type "urn:org:josso:gateway:ws:1.2:protocol":ResolveAuthenticationAssertionResponseType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":AssertIdentityWithSimpleAuthenticationRequest of type "urn:org:josso:gateway:ws:1.2:protocol":AssertIdentityWithSimpleAuthenticationRequestType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":AssertIdentityWithSimpleAuthenticationResponse of type "urn:org:josso:gateway:ws:1.2:protocol":AssertIdentityWithSimpleAuthenticationResponseType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":GlobalSignoffRequest of type "urn:org:josso:gateway:ws:1.2:protocol":GlobalSignoffRequestType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":GlobalSignoffResponse of type "urn:org:josso:gateway:ws:1.2:protocol":GlobalSignoffResponseType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityProviderError of type "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityProviderErrorType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":AssertionNotValidError of type "urn:org:josso:gateway:ws:1.2:protocol":AssertionNotValidErrorType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSessionRequest of type "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSessionRequestType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSessionResponse of type "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSessionResponseType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSecurityDomainRequest of type "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSecurityDomainRequestType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSecurityDomainResponse of type "urn:org:josso:gateway:ws:1.2:protocol":FindUserInSecurityDomainResponseType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":FindRolesBySSOSessionIdRequest of type "urn:org:josso:gateway:ws:1.2:protocol":FindRolesBySSOSessionIdRequestType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":FindRolesBySSOSessionIdResponse of type "urn:org:josso:gateway:ws:1.2:protocol":FindRolesBySSOSessionIdResponseType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":UserExistsRequest of type "urn:org:josso:gateway:ws:1.2:protocol":UserExistsRequestType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":UserExistsResponse of type "urn:org:josso:gateway:ws:1.2:protocol":UserExistsResponseType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityManagerError of type "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityManagerErrorType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":NoSuchUserError of type "urn:org:josso:gateway:ws:1.2:protocol":NoSuchUserErrorType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":InvalidSessionError of type "urn:org:josso:gateway:ws:1.2:protocol":InvalidSessionErrorType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":AccessSessionRequest of type "urn:org:josso:gateway:ws:1.2:protocol":AccessSessionRequestType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":AccessSessionResponse of type "urn:org:josso:gateway:ws:1.2:protocol":AccessSessionResponseType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":SessionRequest of type "urn:org:josso:gateway:ws:1.2:protocol":SessionRequestType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":SessionResponse of type "urn:org:josso:gateway:ws:1.2:protocol":SessionResponseType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":SSOSessionError of type "urn:org:josso:gateway:ws:1.2:protocol":SSOSessionErrorType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":NoSuchSessionError of type "urn:org:josso:gateway:ws:1.2:protocol":NoSuchSessionErrorType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":SSOSession of type "urn:org:josso:gateway:ws:1.2:protocol":SSOSessionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":SSOUser of type "urn:org:josso:gateway:ws:1.2:protocol":SSOUserType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":SSORole of type "urn:org:josso:gateway:ws:1.2:protocol":SSORoleType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:org:josso:gateway:ws:1.2:protocol":SSONameValuePair of type "urn:org:josso:gateway:ws:1.2:protocol":SSONameValuePairType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   urn:org:josso:gateway:ws:1.2:protocol                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns4  service name:	SSOIdentityProviderSOAPBinding 
//gsoap ns4  service type:	SSOIdentityProvider 
//gsoap ns4  service port:	http://replace this ! 
//gsoap ns4  service namespace:	urn:org:josso:gateway:ws:1.2:wsdl/SSOIdentityProviderSOAPBinding 
//gsoap ns4  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns5  service name:	SSOIdentityManagerSOAPBinding 
//gsoap ns5  service type:	SSOIdentityManager 
//gsoap ns5  service port:	http://replace this ! 
//gsoap ns5  service namespace:	urn:org:josso:gateway:ws:1.2:wsdl/SSOIdentityManagerSOAPBinding 
//gsoap ns5  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns6  service name:	SSOSessionManagerSOAPBinding 
//gsoap ns6  service type:	SSOSessionManager 
//gsoap ns6  service port:	http://replace this ! 
//gsoap ns6  service namespace:	urn:org:josso:gateway:ws:1.2:wsdl/SSOSessionManagerSOAPBinding 
//gsoap ns6  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage josso Definitions

@section josso_bindings Service Bindings
  - @ref SSOIdentityProviderSOAPBinding
  - @ref SSOIdentityManagerSOAPBinding
  - @ref SSOSessionManagerSOAPBinding

@section josso_more More Information
- @ref page_notes "Notes"
- @ref page_XMLDataBinding "XML Data Binding"
- @ref SOAP_ENV__Header "SOAP Header Content"
- @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page SSOIdentityProviderSOAPBinding Binding "SSOIdentityProviderSOAPBinding"

@section SSOIdentityProviderSOAPBinding_operations Operations of Binding  "SSOIdentityProviderSOAPBinding"
  - @ref __ns4__resolveAuthenticationAssertion
  - @ref __ns4__assertIdentityWithSimpleAuthentication
  - @ref __ns4__globalSignoff

@section SSOIdentityProviderSOAPBinding_ports Endpoints of Binding  "SSOIdentityProviderSOAPBinding"
  - http://replace this !

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page SSOIdentityManagerSOAPBinding Binding "SSOIdentityManagerSOAPBinding"

@section SSOIdentityManagerSOAPBinding_operations Operations of Binding  "SSOIdentityManagerSOAPBinding"
  - @ref __ns5__findUserInSession
  - @ref __ns5__findUserInSecurityDomain
  - @ref __ns5__findRolesBySSOSessionId
  - @ref __ns5__userExists

@section SSOIdentityManagerSOAPBinding_ports Endpoints of Binding  "SSOIdentityManagerSOAPBinding"
  - http://replace this !

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page SSOSessionManagerSOAPBinding Binding "SSOSessionManagerSOAPBinding"

@section SSOSessionManagerSOAPBinding_operations Operations of Binding  "SSOSessionManagerSOAPBinding"
  - @ref __ns6__accessSession
  - @ref __ns6__getSession

@section SSOSessionManagerSOAPBinding_ports Endpoints of Binding  "SSOSessionManagerSOAPBinding"
  - http://replace this !

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * SOAP Fault Detail                                                          *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Fault is part of the gSOAP context and its content is accessed
through the soap.fault->detail variable (SOAP 1.1) or the
soap.fault->SOAP_ENV__Detail variable (SOAP 1.2).
Use option -j to omit.

*/
struct SOAP_ENV__Detail
{
// xsd:anyAttribute omitted: to parse attribute content of the Detail element into DOM anyAttribute, use wsdl2h option -d.
    struct ns3__AssertionNotValidErrorType*  ns3__AssertionNotValidError   ;
///< SOAP Fault element ""urn:org:josso:gateway:ws:1.2:protocol":AssertionNotValidError" part "AssertionNotValidError"
    struct ns3__SSOIdentityProviderErrorType*  ns3__SSOIdentityProviderError ;
///< SOAP Fault element ""urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityProviderError" part "SSOIdentityProviderError"
    struct ns3__InvalidSessionErrorType*  ns3__InvalidSessionError      ;
///< SOAP Fault element ""urn:org:josso:gateway:ws:1.2:protocol":InvalidSessionError" part "InvalidSessionError"
    struct ns3__NoSuchUserErrorType*     ns3__NoSuchUserError          ;
///< SOAP Fault element ""urn:org:josso:gateway:ws:1.2:protocol":NoSuchUserError" part "NoSuchUserError"
    struct ns3__SSOIdentityManagerErrorType*  ns3__SSOIdentityManagerError  ;
///< SOAP Fault element ""urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityManagerError" part "SSOIdentityManagerError"
    struct ns3__NoSuchSessionErrorType*  ns3__NoSuchSessionError       ;
///< SOAP Fault element ""urn:org:josso:gateway:ws:1.2:protocol":NoSuchSessionError" part "NoSuchSessionError"
    struct ns3__SSOSessionErrorType*     ns3__SSOSessionError          ;
///< SOAP Fault element ""urn:org:josso:gateway:ws:1.2:protocol":SSOSessionError" part "SSOSessionError"
    int                                  __type                        ;	///< set to SOAP_TYPE_X for a serializable type X
    void                                *fault                         ;	///< points to serializable object X or NULL
    _XML                                 __any                         ;	///< Catch any element content in XML string.
};

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   SSOIdentityProviderSOAPBinding                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__resolveAuthenticationAssertion                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__resolveAuthenticationAssertion" of service binding "SSOIdentityProviderSOAPBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":AssertionNotValidError (literal)
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityProviderError (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__resolveAuthenticationAssertion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns3__ResolveAuthenticationAssertionRequestType* ns3__ResolveAuthenticationAssertionRequest,
    // response parameters:
    struct ns3__ResolveAuthenticationAssertionResponseType* ns3__ResolveAuthenticationAssertionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__resolveAuthenticationAssertion(
    struct soap *soap,
    // request parameters:
    struct ns3__ResolveAuthenticationAssertionRequestType* ns3__ResolveAuthenticationAssertionRequest,
    // response parameters:
    struct ns3__ResolveAuthenticationAssertionResponseType* ns3__ResolveAuthenticationAssertionResponse
  );
@endcode

*/

//gsoap ns4  service method-style:	resolveAuthenticationAssertion document
//gsoap ns4  service method-encoding:	resolveAuthenticationAssertion literal
//gsoap ns4  service method-fault:	resolveAuthenticationAssertion ns3__AssertionNotValidError
//gsoap ns4  service method-fault:	resolveAuthenticationAssertion ns3__SSOIdentityProviderError
int __ns4__resolveAuthenticationAssertion(
    struct ns3__ResolveAuthenticationAssertionRequestType* ns3__ResolveAuthenticationAssertionRequest,	///< Request parameter
    struct ns3__ResolveAuthenticationAssertionResponseType* ns3__ResolveAuthenticationAssertionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__assertIdentityWithSimpleAuthentication                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__assertIdentityWithSimpleAuthentication" of service binding "SSOIdentityProviderSOAPBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityProviderError (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__assertIdentityWithSimpleAuthentication(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns3__AssertIdentityWithSimpleAuthenticationRequestType* ns3__AssertIdentityWithSimpleAuthenticationRequest,
    // response parameters:
    struct ns3__AssertIdentityWithSimpleAuthenticationResponseType* ns3__AssertIdentityWithSimpleAuthenticationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__assertIdentityWithSimpleAuthentication(
    struct soap *soap,
    // request parameters:
    struct ns3__AssertIdentityWithSimpleAuthenticationRequestType* ns3__AssertIdentityWithSimpleAuthenticationRequest,
    // response parameters:
    struct ns3__AssertIdentityWithSimpleAuthenticationResponseType* ns3__AssertIdentityWithSimpleAuthenticationResponse
  );
@endcode

*/

//gsoap ns4  service method-style:	assertIdentityWithSimpleAuthentication document
//gsoap ns4  service method-encoding:	assertIdentityWithSimpleAuthentication literal
//gsoap ns4  service method-fault:	assertIdentityWithSimpleAuthentication ns3__SSOIdentityProviderError
int __ns4__assertIdentityWithSimpleAuthentication(
    struct ns3__AssertIdentityWithSimpleAuthenticationRequestType* ns3__AssertIdentityWithSimpleAuthenticationRequest,	///< Request parameter
    struct ns3__AssertIdentityWithSimpleAuthenticationResponseType* ns3__AssertIdentityWithSimpleAuthenticationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__globalSignoff                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__globalSignoff" of service binding "SSOIdentityProviderSOAPBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityProviderError (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__globalSignoff(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns3__GlobalSignoffRequestType* ns3__GlobalSignoffRequest,
    // response parameters:
    struct ns3__GlobalSignoffResponseType* ns3__GlobalSignoffResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__globalSignoff(
    struct soap *soap,
    // request parameters:
    struct ns3__GlobalSignoffRequestType* ns3__GlobalSignoffRequest,
    // response parameters:
    struct ns3__GlobalSignoffResponseType* ns3__GlobalSignoffResponse
  );
@endcode

*/

//gsoap ns4  service method-style:	globalSignoff document
//gsoap ns4  service method-encoding:	globalSignoff literal
//gsoap ns4  service method-fault:	globalSignoff ns3__SSOIdentityProviderError
int __ns4__globalSignoff(
    struct ns3__GlobalSignoffRequestType* ns3__GlobalSignoffRequest,	///< Request parameter
    struct ns3__GlobalSignoffResponseType* ns3__GlobalSignoffResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   SSOIdentityManagerSOAPBinding                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__findUserInSession                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__findUserInSession" of service binding "SSOIdentityManagerSOAPBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityManagerError (literal)
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":NoSuchUserError (literal)
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":InvalidSessionError (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__findUserInSession(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns3__FindUserInSessionRequestType* ns3__FindUserInSessionRequest,
    // response parameters:
    struct ns3__FindUserInSessionResponseType* ns3__FindUserInSessionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__findUserInSession(
    struct soap *soap,
    // request parameters:
    struct ns3__FindUserInSessionRequestType* ns3__FindUserInSessionRequest,
    // response parameters:
    struct ns3__FindUserInSessionResponseType* ns3__FindUserInSessionResponse
  );
@endcode

*/

//gsoap ns5  service method-style:	findUserInSession document
//gsoap ns5  service method-encoding:	findUserInSession literal
//gsoap ns5  service method-fault:	findUserInSession ns3__SSOIdentityManagerError
//gsoap ns5  service method-fault:	findUserInSession ns3__NoSuchUserError
//gsoap ns5  service method-fault:	findUserInSession ns3__InvalidSessionError
int __ns5__findUserInSession(
    struct ns3__FindUserInSessionRequestType* ns3__FindUserInSessionRequest,	///< Request parameter
    struct ns3__FindUserInSessionResponseType* ns3__FindUserInSessionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__findUserInSecurityDomain                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__findUserInSecurityDomain" of service binding "SSOIdentityManagerSOAPBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityManagerError (literal)
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":NoSuchUserError (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__findUserInSecurityDomain(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns3__FindUserInSecurityDomainRequestType* ns3__FindUserInSecurityDomainRequest,
    // response parameters:
    struct ns3__FindUserInSecurityDomainResponseType* ns3__FindUserInSecurityDomainResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__findUserInSecurityDomain(
    struct soap *soap,
    // request parameters:
    struct ns3__FindUserInSecurityDomainRequestType* ns3__FindUserInSecurityDomainRequest,
    // response parameters:
    struct ns3__FindUserInSecurityDomainResponseType* ns3__FindUserInSecurityDomainResponse
  );
@endcode

*/

//gsoap ns5  service method-style:	findUserInSecurityDomain document
//gsoap ns5  service method-encoding:	findUserInSecurityDomain literal
//gsoap ns5  service method-fault:	findUserInSecurityDomain ns3__SSOIdentityManagerError
//gsoap ns5  service method-fault:	findUserInSecurityDomain ns3__NoSuchUserError
int __ns5__findUserInSecurityDomain(
    struct ns3__FindUserInSecurityDomainRequestType* ns3__FindUserInSecurityDomainRequest,	///< Request parameter
    struct ns3__FindUserInSecurityDomainResponseType* ns3__FindUserInSecurityDomainResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__findRolesBySSOSessionId                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__findRolesBySSOSessionId" of service binding "SSOIdentityManagerSOAPBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityManagerError (literal)
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":InvalidSessionError (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__findRolesBySSOSessionId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns3__FindRolesBySSOSessionIdRequestType* ns3__FindRolesBySSOSessionIdRequest,
    // response parameters:
    struct ns3__FindRolesBySSOSessionIdResponseType* ns3__FindRolesBySSOSessionIdResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__findRolesBySSOSessionId(
    struct soap *soap,
    // request parameters:
    struct ns3__FindRolesBySSOSessionIdRequestType* ns3__FindRolesBySSOSessionIdRequest,
    // response parameters:
    struct ns3__FindRolesBySSOSessionIdResponseType* ns3__FindRolesBySSOSessionIdResponse
  );
@endcode

*/

//gsoap ns5  service method-style:	findRolesBySSOSessionId document
//gsoap ns5  service method-encoding:	findRolesBySSOSessionId literal
//gsoap ns5  service method-fault:	findRolesBySSOSessionId ns3__SSOIdentityManagerError
//gsoap ns5  service method-fault:	findRolesBySSOSessionId ns3__InvalidSessionError
int __ns5__findRolesBySSOSessionId(
    struct ns3__FindRolesBySSOSessionIdRequestType* ns3__FindRolesBySSOSessionIdRequest,	///< Request parameter
    struct ns3__FindRolesBySSOSessionIdResponseType* ns3__FindRolesBySSOSessionIdResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__userExists                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__userExists" of service binding "SSOIdentityManagerSOAPBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":SSOIdentityManagerError (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__userExists(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns3__UserExistsRequestType*  ns3__UserExistsRequest,
    // response parameters:
    struct ns3__UserExistsResponseType* ns3__UserExistsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__userExists(
    struct soap *soap,
    // request parameters:
    struct ns3__UserExistsRequestType*  ns3__UserExistsRequest,
    // response parameters:
    struct ns3__UserExistsResponseType* ns3__UserExistsResponse
  );
@endcode

*/

//gsoap ns5  service method-style:	userExists document
//gsoap ns5  service method-encoding:	userExists literal
//gsoap ns5  service method-fault:	userExists ns3__SSOIdentityManagerError
int __ns5__userExists(
    struct ns3__UserExistsRequestType*  ns3__UserExistsRequest,	///< Request parameter
    struct ns3__UserExistsResponseType* ns3__UserExistsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   SSOSessionManagerSOAPBinding                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__accessSession                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__accessSession" of service binding "SSOSessionManagerSOAPBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":SSOSessionError (literal)
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":NoSuchSessionError (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__accessSession(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns3__AccessSessionRequestType* ns3__AccessSessionRequest,
    // response parameters:
    struct ns3__AccessSessionResponseType* ns3__AccessSessionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__accessSession(
    struct soap *soap,
    // request parameters:
    struct ns3__AccessSessionRequestType* ns3__AccessSessionRequest,
    // response parameters:
    struct ns3__AccessSessionResponseType* ns3__AccessSessionResponse
  );
@endcode

*/

//gsoap ns6  service method-style:	accessSession document
//gsoap ns6  service method-encoding:	accessSession literal
//gsoap ns6  service method-fault:	accessSession ns3__SSOSessionError
//gsoap ns6  service method-fault:	accessSession ns3__NoSuchSessionError
int __ns6__accessSession(
    struct ns3__AccessSessionRequestType* ns3__AccessSessionRequest,	///< Request parameter
    struct ns3__AccessSessionResponseType* ns3__AccessSessionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__getSession                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__getSession" of service binding "SSOSessionManagerSOAPBinding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":SSOSessionError (literal)
  - SOAP Fault: "urn:org:josso:gateway:ws:1.2:protocol":NoSuchSessionError (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__getSession(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns3__SessionRequestType*     ns3__SessionRequest,
    // response parameters:
    struct ns3__SessionResponseType*    ns3__SessionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__getSession(
    struct soap *soap,
    // request parameters:
    struct ns3__SessionRequestType*     ns3__SessionRequest,
    // response parameters:
    struct ns3__SessionResponseType*    ns3__SessionResponse
  );
@endcode

*/

//gsoap ns6  service method-style:	getSession document
//gsoap ns6  service method-encoding:	getSession literal
//gsoap ns6  service method-fault:	getSession ns3__SSOSessionError
//gsoap ns6  service method-fault:	getSession ns3__NoSuchSessionError
int __ns6__getSession(
    struct ns3__SessionRequestType*     ns3__SessionRequest,	///< Request parameter
    struct ns3__SessionResponseType*    ns3__SessionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a FILE* fd, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a FILE* fd, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns2 Top-level root elements of schema ""

@section ns3 Top-level root elements of schema "urn:org:josso:gateway:ws:1.2:protocol"

  - <ns3:ResolveAuthenticationAssertionRequest> (use wsdl2h option -g to auto-generate)

  - <ns3:ResolveAuthenticationAssertionResponse> (use wsdl2h option -g to auto-generate)

  - <ns3:AssertIdentityWithSimpleAuthenticationRequest> (use wsdl2h option -g to auto-generate)

  - <ns3:AssertIdentityWithSimpleAuthenticationResponse> (use wsdl2h option -g to auto-generate)

  - <ns3:GlobalSignoffRequest> (use wsdl2h option -g to auto-generate)

  - <ns3:GlobalSignoffResponse> (use wsdl2h option -g to auto-generate)

  - <ns3:SSOIdentityProviderError> (use wsdl2h option -g to auto-generate)

  - <ns3:AssertionNotValidError> (use wsdl2h option -g to auto-generate)

  - <ns3:FindUserInSessionRequest> (use wsdl2h option -g to auto-generate)

  - <ns3:FindUserInSessionResponse> (use wsdl2h option -g to auto-generate)

  - <ns3:FindUserInSecurityDomainRequest> (use wsdl2h option -g to auto-generate)

  - <ns3:FindUserInSecurityDomainResponse> (use wsdl2h option -g to auto-generate)

  - <ns3:FindRolesBySSOSessionIdRequest> (use wsdl2h option -g to auto-generate)

  - <ns3:FindRolesBySSOSessionIdResponse> (use wsdl2h option -g to auto-generate)

  - <ns3:UserExistsRequest> (use wsdl2h option -g to auto-generate)

  - <ns3:UserExistsResponse> (use wsdl2h option -g to auto-generate)

  - <ns3:SSOIdentityManagerError> (use wsdl2h option -g to auto-generate)

  - <ns3:NoSuchUserError> (use wsdl2h option -g to auto-generate)

  - <ns3:InvalidSessionError> (use wsdl2h option -g to auto-generate)

  - <ns3:AccessSessionRequest> (use wsdl2h option -g to auto-generate)

  - <ns3:AccessSessionResponse> (use wsdl2h option -g to auto-generate)

  - <ns3:SessionRequest> (use wsdl2h option -g to auto-generate)

  - <ns3:SessionResponse> (use wsdl2h option -g to auto-generate)

  - <ns3:SSOSessionError> (use wsdl2h option -g to auto-generate)

  - <ns3:NoSuchSessionError> (use wsdl2h option -g to auto-generate)

  - <ns3:SSOSession> (use wsdl2h option -g to auto-generate)

  - <ns3:SSOUser> (use wsdl2h option -g to auto-generate)

  - <ns3:SSORole> (use wsdl2h option -g to auto-generate)

  - <ns3:SSONameValuePair> (use wsdl2h option -g to auto-generate)

*/

/* End of josso-1.2.h */
